<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TC009">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TC009">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">1</intProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
      </ThreadGroup>
      <hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://localhost:8086/write?db=tafPerformance</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">noskriptDemo</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">90;95;99</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">jmetertest</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener">
          <elementProp name="arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://localhost:8086/write?db=tafPerformance</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">noskriptDemo</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">90;95;99</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">jmetertest</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="browserdetailsApi">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.domain">noskript.com</stringProp>
          <stringProp name="HTTPSampler.path">scriptless/rest/browsers/viewallBrowser.action</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-Scriptless-Token" elementType="Header">
                <stringProp name="Header.name">X-Scriptless-Token</stringProp>
                <stringProp name="Header.value">${scriptlessToken}</stringProp>
              </elementProp>
              <elementProp name="Cookie" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">${COOKIE_JSESSIONID}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Body Data" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Body Data</stringProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;karthika789&quot;,&#xd;
	&quot;password&quot;: &quot;NDE0N2Y3NzZkNmE4ZmE5NmZlOWRiMGQyZDdkZmZkZmY6OmEwNWUxZDEyMWM1MGZlZDdiNTJjMzIxMjdkYjZlMWE5OjplT3Qrc1B1L20waFVEWHJFMHg3WkFBPT0=&quot;,&#xd;
	&quot;machineIp&quot;: &quot;127.0.0.1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">false</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <stringProp name="HTTPSampler.domain">noskript.com</stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.path">scriptless/rest/authentication/login.action</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JsonPostProcessor_Scriptlesstoken">
            <stringProp name="JSONPostProcessor.referenceNames">scriptlessToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..scriptlessToken</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">login failed</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1  </stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="JSESSIONID">
            <stringProp name="RegexExtractor.refname">COOKIE_JSESSIONID</stringProp>
            <stringProp name="RegexExtractor.regex">JSESSIONID=(.*?);</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="RegexExtractor.default">no jSessionId</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            <stringProp name="RegexExtractor.template">$0$</stringProp>
            <boolProp name="RegexExtractor.useHeaders">true</boolProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor">
            <stringProp name="script">log.info(&quot;****************************************&quot;+vars.get(&quot;scriptlessToken&quot;))
log.info(&quot;****************************************&quot;+vars.get(&quot;COOKIE_JSESSIONID&quot;))
</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="testObjectAPI">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Body Data" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Body Data</stringProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;filters&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;filterBy&quot;: &quot;&quot;,&#xd;
  &quot;pageNo&quot;: 0,&#xd;
  &quot;pageSize&quot;: 50,&#xd;
  &quot;sort&quot;: {&#xd;
    &quot;name&quot;: &quot;updatedOn&quot;,&#xd;
    &quot;type&quot;: &quot;desc&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">false</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.domain">noskript.com</stringProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.path">scriptless/rest/testobject/filterTestObjectPages.action?tableId=5</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-Scriptless-Token" elementType="Header">
                <stringProp name="Header.name">X-Scriptless-Token</stringProp>
                <stringProp name="Header.value">${scriptlessToken}</stringProp>
              </elementProp>
              <elementProp name="Cookie" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">${COOKIE_JSESSIONID}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="teststepApi">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Body Data" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Body Data</stringProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;filters&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;filterBy&quot;: &quot;&quot;,&#xd;
  &quot;pageNo&quot;: 0,&#xd;
  &quot;pageSize&quot;: 50,&#xd;
  &quot;sort&quot;: {&#xd;
    &quot;name&quot;: &quot;updatedOn&quot;,&#xd;
    &quot;type&quot;: &quot;desc&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">false</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.domain">noskript.com</stringProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.path">scriptless/rest/teststep/filterTestStepPages.action?tableId=5</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-Scriptless-Token" elementType="Header">
                <stringProp name="Header.name">X-Scriptless-Token</stringProp>
                <stringProp name="Header.value">${scriptlessToken}</stringProp>
              </elementProp>
              <elementProp name="Cookie" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">${COOKIE_JSESSIONID}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="testComponentApi">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Body Data" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Body Data</stringProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;filters&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;filterBy&quot;: &quot;&quot;,&#xd;
  &quot;pageNo&quot;: 0,&#xd;
  &quot;pageSize&quot;: 50,&#xd;
  &quot;sort&quot;: {&#xd;
    &quot;name&quot;: &quot;updatedOn&quot;,&#xd;
    &quot;type&quot;: &quot;desc&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">false</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.domain">noskript.com</stringProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.path">scriptless/rest/module/filterComponentPages.action?tableId</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-Scriptless-Token" elementType="Header">
                <stringProp name="Header.name">X-Scriptless-Token</stringProp>
                <stringProp name="Header.value">${scriptlessToken}</stringProp>
              </elementProp>
              <elementProp name="Cookie" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">${COOKIE_JSESSIONID}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="testcaseApi">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Body Data" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Body Data</stringProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;filters&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;filterBy&quot;: &quot;&quot;,&#xd;
  &quot;pageNo&quot;: 0,&#xd;
  &quot;pageSize&quot;: 50,&#xd;
  &quot;sort&quot;: {&#xd;
    &quot;name&quot;: &quot;updatedOn&quot;,&#xd;
    &quot;type&quot;: &quot;desc&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">false</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.domain">noskript.com</stringProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.path">scriptless/rest/testcase/filterTestCasePages.action?appId=5</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-Scriptless-Token" elementType="Header">
                <stringProp name="Header.name">X-Scriptless-Token</stringProp>
                <stringProp name="Header.value">${scriptlessToken}</stringProp>
              </elementProp>
              <elementProp name="Cookie" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">${COOKIE_JSESSIONID}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="testsetApi">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Body Data" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">Body Data</stringProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;filters&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;filterBy&quot;: &quot;&quot;,&#xd;
  &quot;pageNo&quot;: 0,&#xd;
  &quot;pageSize&quot;: 50,&#xd;
  &quot;sort&quot;: {&#xd;
    &quot;name&quot;: &quot;updatedOn&quot;,&#xd;
    &quot;type&quot;: &quot;desc&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">false</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.domain">noskript.com</stringProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.path">scriptless/rest/testset/filterTestSetPages.action?appId=5</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-Scriptless-Token" elementType="Header">
                <stringProp name="Header.name">X-Scriptless-Token</stringProp>
                <stringProp name="Header.value">${scriptlessToken}</stringProp>
              </elementProp>
              <elementProp name="Cookie" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">${COOKIE_JSESSIONID}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
